if(not fs.exists(".oo")) then fs.makeDir(".oo") local h = http.get("http://pastebin.com/raw.php?i=zDf5pMsK") local cont = h.readAll() h.close() local h2 = fs.open(".oo/oo","w") h2.writeLine(cont) h2.close() end dofile(".oo/oo")

local function recursive(path)
	local curPath = path
	local list = fs.list(path)
	for k,v in pairs(list) do
		local p = fs.combine(path,v)
		if(fs.isDir(p)) then
			recursive(p)
		else
			import(p)
		end
	end
end

local basepath = fs.getDir(shell.getRunningProgram())

local function rel(p)
	return fs.combine(basepath,p)
end

recursive(rel("characters"))
recursive(rel("attacks"))
recursive(rel("ai"))
recursive(rel("ui"))

local chars = searchClassesExtending("BaseCharacter")

local player = chars[math.random(1,#chars)]:new()
local enemy = chars[math.random(1,#chars)]:new()

local config = {}
local cHandle = fs.open(rel("conf.cfg"),"r")
config = textutils.unserialize(cHandle.readAll())
cHandle.close()

local ai = _G[config.ai]
local ui = _G[config.ui]

while true do

	local attack = ui:gameMenu(player,enemy)
	local enemyAttack = ai:selectAttack(enemy:getAttacks()) 

	if(attack:getType() == "other") then
		enemy:doDamage(attack:getDamage())
	else
		player:doDamage(attack:getDamage())
	end

	if(enemyAttack:getType() == "other") then
		player:doDamage(enemyAttack:getDamage())
	else
		enemy:doDamage(enemyAttack:getDamage())
	end

	if(player:getLife() == 0 or enemy:getLife() == 0) then
		break
	end
end